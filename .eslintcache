[{"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/index.js":"1","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/App.js":"2","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/services/auth.js":"3","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/utils/paths.js":"4","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/HomePage.jsx":"5","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/routing-components/NormalRoute.jsx":"6","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/LogIn.jsx":"7","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/ProtectedPage.jsx":"8","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Signup.jsx":"9","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/routing-components/ProtectedRoute.jsx":"10","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/components/Navbar/Navbar.jsx":"11","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/components/Loading/index.jsx":"12","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Profile.jsx":"13","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Settings.jsx":"14","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/services/protectedservices.js":"15","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Movienight.jsx":"16"},{"size":312,"mtime":1607508507297,"results":"17","hashOfConfig":"18"},{"size":3452,"mtime":1607610901802,"results":"19","hashOfConfig":"18"},{"size":1608,"mtime":1607595795373,"results":"20","hashOfConfig":"18"},{"size":189,"mtime":1607595653452,"results":"21","hashOfConfig":"18"},{"size":922,"mtime":1607595795371,"results":"22","hashOfConfig":"18"},{"size":534,"mtime":1607508507294,"results":"23","hashOfConfig":"18"},{"size":1964,"mtime":1607595795371,"results":"24","hashOfConfig":"18"},{"size":174,"mtime":1607508507300,"results":"25","hashOfConfig":"18"},{"size":2000,"mtime":1607599637824,"results":"26","hashOfConfig":"18"},{"size":646,"mtime":1607508507300,"results":"27","hashOfConfig":"18"},{"size":20,"mtime":1607595653451,"results":"28","hashOfConfig":"18"},{"size":346,"mtime":1607595653450,"results":"29","hashOfConfig":"18"},{"size":488,"mtime":1607605607244,"results":"30","hashOfConfig":"18"},{"size":1783,"mtime":1607607416535,"results":"31","hashOfConfig":"18"},{"size":776,"mtime":1607618425436,"results":"32","hashOfConfig":"18"},{"size":2653,"mtime":1607612082700,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1u5v6jm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/index.js",[],["70","71"],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/App.js",["72","73"],"import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport LoadingComponent from \"./components/Loading\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport HomePage from \"./pages/HomePage\";\nimport LogIn from \"./pages/LogIn\";\nimport Login from \"./pages/LogIn\";\nimport Profile from \"./pages/Profile\";\nimport Settings from \"./pages/Settings\";\nimport Movienight from \"./pages/Movienight\";\nimport ProtectedPage from \"./pages/ProtectedPage\";\nimport Signup from \"./pages/Signup\";\nimport NormalRoute from \"./routing-components/NormalRoute\";\nimport ProtectedRoute from \"./routing-components/ProtectedRoute\";\nimport { getLoggedIn, logout } from \"./services/auth\";\nimport * as PATHS from \"./utils/paths\";\n\nclass App extends React.Component {\n  state = {\n    user: null,\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      return this.setState({\n        isLoading: false,\n      });\n    }\n    getLoggedIn(accessToken).then((res) => {\n      if (!res.status) {\n        console.log(\"RES IN CASE OF FAILURE\", res);\n        // deal with failed backend call\n        return this.setState({\n          isLoading: false,\n        });\n      }\n      this.setState({\n        user: res.data.user,\n        isLoading: false,\n      });\n    });\n  };\n\n  handleLogout = () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      return this.setState({\n        user: null,\n        isLoading: false,\n      });\n    }\n    this.setState(\n      {\n        isLoading: true,\n      },\n      () => {\n        logout(accessToken).then((res) => {\n          if (!res.status) {\n            // deal with error here\n            console.log(\"SOMETHING HAPPENED\", res);\n          }\n\n          localStorage.removeItem(\"accessToken\");\n          return this.setState({\n            isLoading: false,\n            user: null,\n          });\n        });\n      }\n    );\n  };\n\n  authenticate = (user) => {\n    this.setState({\n      user,\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <div className=\"App\">\n        {/* // */}\n        <Switch>\n          <NormalRoute\n            exact\n            path={PATHS.HOMEPAGE}\n            component={HomePage}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n\n          <NormalRoute\n            exact\n            path={PATHS.SIGNUPPAGE}\n            authenticate={this.authenticate}\n            component={Signup}\n          />\n          <NormalRoute\n            exact\n            path={PATHS.LOGINPAGE}\n            authenticate={this.authenticate}\n            component={LogIn}\n          />\n          <ProtectedRoute\n            exact\n            path={PATHS.PROTECTEDPAGE}\n            component={ProtectedPage}\n            user={this.state.user}\n          />\n          <ProtectedRoute\n            exact\n            path={PATHS.PROFILE}\n            component={Profile}\n            user={this.state.user}\n          />\n\n          <ProtectedRoute\n            exact\n            path={\"/settings\"}\n            component={Settings}\n            user={this.state.user}\n          />\n\n          <ProtectedRoute\n            exact\n            path={\"/movienight\"}\n            component={Movienight}\n            user={this.state.user}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/services/auth.js",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/utils/paths.js",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/HomePage.jsx",["74","75"],"import logo from \"../logo.svg\";\nimport \"../App.css\";\nimport Login from \"../pages/LogIn\"\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction HomePage(props) {\n  return (\n      <div className=\"App\">\n      <Link to=\"/\" className=\"nav__projectName\">\n        Matchflix\n      </Link>\n\n      <div className=\"nav__authLinks\">\n        {props.user ? (\n          <>\n            <Link to=\"/protected\" className=\"authLink\">\n              Protected Page\n            </Link>\n            <button className=\"nav-logoutbtn\" onClick={props.handleLogout}>\n              Logout\n            </button>\n          </>\n        ) : (\n          <>\n            <Link to=\"/auth/signup\" className=\"authLink\">\n              Signup\n            </Link>\n            <Link to=\"/auth/login\" className=\"authLink\">\n              Log In\n            </Link>\n            </>\n        )}\n    </div>\n\n   </div>)};\n\n\nexport default HomePage;\n","/Users/querienornstein/Desktop/Project3/Matchflix/client/src/routing-components/NormalRoute.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/LogIn.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/ProtectedPage.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Signup.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/routing-components/ProtectedRoute.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/components/Navbar/Navbar.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/components/Loading/index.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Profile.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Settings.jsx",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/services/protectedservices.js",[],"/Users/querienornstein/Desktop/Project3/Matchflix/client/src/pages/Movienight.jsx",["76"],"import React, { Component } from 'react';\nimport {movienightCreate} from \"../services/protectedservices\"\nimport {movienightQuery} from \"../services/protectedservices\"\nclass Movienight extends Component {\nstate =  {\n    roomCreated: false,\n    roomName: \"\",\n    roomPassword: \"\",\n    movieArray: [],\n    numberMovies: 0,\n    genre: \"\",\n    imdbScore: 0,\n    participants:\"\"\n}\n\n\n\nhandleCreateNight = (event) =>  {\n    event.preventDefault()\n    this.setState({\n        roomCreated: true\n    })  \n}\n\nhandleQuery = (event) => {\n    event.preventDefault()\n    \nconst movieQueryData = {\n    numberMovies: this.state.numberMovies,\n    genre: this.state.genre,\n    imdbScore: this.state.imdbScore,\n    host: this.props.user._id,\n    roomName: this.state.roomName,\n    roomPassword:this.state.roomPassword,\n    participants: this.state.participants,\n    }\n    movienightCreate(movieQueryData).then((res) => {\n    console.log(res)}) \n    } \n\nhandleInputChange = (event) => {\n    const { name, value } = event.target;\n    console.log(this.state[name])\n    this.setState({\n      [name]: value,\n    });\n  };\n\nrender() {\n        if (this.state.roomCreated) {\n            return (<form onSubmit={this.handleQuery } action=\"\">\n            <label htmlFor=\"genre\">Which genre? </label>\n            <input name=\"genre\" onChange={this.handleInputChange} type=\"text\"/>\n            <label htmlFor=\"numberMovies\">How many movies?</label>\n            <input name=\"numberMovies\" onChange={this.handleInputChange} type=\"number\"/>\n            <label htmlFor=\"imdbScore\">Minimum IMDB rating</label>\n            <input name=\"imdbScore\" onChange={this.handleInputChange} type=\"number\"/>\n            <button>Generate movies!</button>\n            \n        </form>)\n        } else { \n            return ( <div>\n                <h1>Create your movie night</h1>\n                <form onSubmit={this.handleCreateNight} action=\"\">\n                    <label htmlFor=\"roomName\">Enter your room name</label>\n                    <input name = \"roomName\" onChange={this.handleInputChange} type=\"text\" placeholder=\"Room name\"/> <br/>\n                    <label htmlFor=\"roomPassword\">Enter your room password</label>\n                    <input name = \"roomPassword\" onChange={this.handleInputChange} type=\"password\" placeholder=\"Password\"/><br/>\n                    <label htmlFor=\"participants\">Enter number of participants</label>\n                    <input name = \"participants\" onChange={this.handleInputChange} type=\"number\"/>\n                    <button type=\"submit\" >Create movie night!</button>\n                </form>\n            </div>\n        );\n    }\n}\n}\n\nexport default Movienight;",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":13},{"ruleId":"81","severity":1,"message":"86","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"81","severity":1,"message":"87","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":24},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'logo' is defined but never used.","'movienightQuery' is defined but never used.","no-global-assign","no-unsafe-negation"]